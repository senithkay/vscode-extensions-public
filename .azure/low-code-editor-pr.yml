parameters:
- name: ballerina_dist_uri
  displayName: Ballerina distrbution deb uri
  type: string
  default: https://dist.ballerina.io/downloads/2201.1.2/ballerina-2201.1.2-swan-lake-linux-x64.deb
- name: ballerina_dist_name
  displayName: Ballerina distrbution deb name
  type: string
  default: ballerina-2201.1.2-swan-lake-linux-x64.deb

trigger: none

pr:
  branches:
    include:
    - '*'

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: Choreo
  displayName: Choreo Job
  timeoutInMinutes: 180
  steps:
  - script: |
      sudo apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
    displayName: "Install Cypress Depencies"

  - script: |
      wget ${{parameters.ballerina_dist_uri}}
      sudo dpkg -i ${{parameters.ballerina_dist_name}}
    displayName: "Install Ballerina"
  
  - script: |
      wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
      sudo dpkg -i google-chrome-stable_current_amd64.deb
    displayName: "Install Chrome Stable Version"

  - task: NodeTool@0
    inputs:
      versionSpec: 16.x

  - script: npm run build
    displayName: "Build Mono Repo"
  
  - script: |
      INTEGRATION_TEST_RUN_ID=$(uuidgen)
    displayName: "Generate a unique ID for test run"

  - script: npm test
    displayName: "Run Integration Tests"
  
  - task: PublishPipelineArtifact@1
    displayName: 'Publish test fail screenshots'
    name: PublishTestFailScreenshots
    condition: failed()
    inputs:
      targetPath: 'integration-tests/cypress/screenshots'
      artifactName: 'low-code-cypress-screenshots-$(INTEGRATION_TEST_RUN_ID)'

  - task: PublishPipelineArtifact@1
    displayName: 'Publish coverage reports'
    name: PublishCoverageReports
    condition: always()
    inputs:
      targetPath: 'integration-tests/coverage'
      artifactType: 'pipeline'
      artifactName: 'low-code-cypress-coverage-$(INTEGRATION_TEST_RUN_ID)'

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: 'integration-tests/coverage/cobertura-coverage.xml'

  - task: PublishPipelineArtifact@1
    displayName: 'Publish test videos'
    name: PublishTestVideos
    condition: always()
    inputs:
      targetPath: 'integration-tests/cypress/videos'
      artifactName: 'low-code-cypress-recordings-$(INTEGRATION_TEST_RUN_ID)'

  - task: PublishPipelineArtifact@1
      displayName: 'Publish test failure logs'
      name: PublishFailingTestsLogs
      condition: failed()
      inputs:
        targetPath: 'integration-tests/logs'
        artifactType: 'pipeline'
        artifactName: 'low-code-cypress-failure-test-logs-$(INTEGRATION_TEST_RUN_ID)'
