parameters:
  - name: vsix_uri
    displayName: Ballerina VSIX uri
    type: string
    default: https://github.com/wso2/ballerina-plugin-vscode/releases/download/v2x-2021-11-17/ballerina.vsix
  - name: vsix_name
    displayName: Ballerina VSIX name
    type: string
    default: ballerina.vsix
  - name: ballerina_dist_uri
    displayName: Ballerina distrbution deb uri
    type: string
    default: https://github.com/ballerina-platform/ballerina-distribution/releases/download/vswan-lake-beta4-rc3/ballerina-linux-installer-x64-swan-lake-beta4.deb
  - name: ballerina_dist_name
    displayName: Ballerina distrbution deb name
    type: string
    default: ballerina-linux-installer-x64-swan-lake-beta4.deb
  - name: "NODE_VERSION"
    type: string
    default: 14.2.0
  - name: "DEVPORTAL_LOGIN_URL"
    type: string
    default: "https://devportal.dv.choreo.dev/?fidp=id.dv.choreo.dev"
  - name: "CODE_SERVER_TEST_SRC"
    type: string
    default: "code-server-tests"
  - name: "USER_CONFIG_FILE_NAME"
    type: string
    default: "cypress.env.json"
  - name: "CONFIG_FILE_NAME"
    type: string
    default: "cypress.json"

resources:
  repositories:
    - repository: BALLERINA_PLUGIN_VSCODE
      type: github
      name: TheNiron/ballerina-plugin-vscode
      ref: refs/heads/code-server-build
      endpoint: choreo-cicd-committer

trigger: none

pr:
  branches:
    include:
      - "main"

jobs:
  - job: DockerBuildandPush

    pool:
      vmImage: "ubuntu-latest"

    variables:
      CONTAINER_REGISTRY: choreocontrolplane.azurecr.io
      REPOSITORY: choreoipaas/ballerina-code-server
      BAL_VERSION:

    steps:
      - script: |
          TAG="$(date +'%Y%m%d-%H%M')"
          echo "##vso[task.setvariable variable=TAG]${TAG}"
          echo "Generated Docker tag: ${TAG}"
        displayName: "Generate Docker tag"

      - checkout: BALLERINA_PLUGIN_VSCODE
        persistCredentials: true

      - script: |
          git config --global user.email "choreo-cicd@wso2.com"
          git config --global user.name "Choreo CI Agent"
          echo "git status"
          git status
          echo "Update build.txt"
          echo "$(TAG) ${{ parameters.vsix_uri }} ${{ parameters.ballerina_dist_uri }}" >> build.txt
          git add build.txt
          git commit -m "Update build details for $(TAG)"
          git push origin HEAD:code-server-build
          git checkout origin/main
        displayName: "Update code-server-build branch new build details"

      - task: Docker@2
        displayName: "Build Docker image"
        inputs:
          command: build
          containerRegistry: "wso2choreo-control-plane-acr"
          repository: $(REPOSITORY)
          Dockerfile: ".github/workflows/resources/code-server/2/Dockerfile"
          buildContext: "."
          tags: |
            latest
            $(TAG)
          arguments: "--build-arg BALLERINA_DEB_URI=${{ parameters.ballerina_dist_uri }} --build-arg BALLERINA_DEB_NAME=${{ parameters.ballerina_dist_name }} --build-arg BALLERINA_VSIX_URI=${{ parameters.vsix_uri }}  --build-arg BALLERINA_VSIX_NAME=${{ parameters.vsix_name }}"

      - task: Docker@2
        displayName: "Login to ACR and validate"
        inputs:
          command: login
          containerRegistry: "wso2choreo-control-plane-acr"
      - script: |
          containerID=$(docker run -d \
          docker run \
            --name=code-server \
            -e PUID=10500 \
            -e PGID=10500 \
            -e TZ=Europe/London \
          -e VSCODE_CHOREO_SESSION_USERNAME=kanushka \
          -e VSCODE_CHOREO_GATEWAY_BASE_URI=https://choreocontrolplane.preview-dv.choreo.dev \
          -e VSCODE_CHOREO_DEPLOY_URI=https://consolev2.preview-dv.choreo.dev/home \
          -e CODE_SERVER_ENV=true \
          -e LOW_CODE_MODE=true \
          -e BALLERINA_STAGE_CENTRAL=true \
          -e VSCODE_CHOREO_SESSION_TOKEN=eyJ4NXQiOiJOVGd5TTJabE9XTEfT1aNZMw0SpnKtnTO05OcspqVc1Vut7HC7B8ZY3cthwJ94vBBPvrn7CRl_-hnAe4VuIisdbTOsOUfzN3U-O2Dc5t2IWLjgRjYtkrqg \
            -p 8443:8443 \
            --restart unless-stopped \
            choreocontrolplane.azurecr.io/choreoipaas/ballerina-code-server:latest)
          echo $containerID
          balerinaVersion=$(docker exec "$containerID" bal -v)
          echo $balerinaVersion
          docker exec "$containerID" cd /.
          docker exec "$containerID" pwd
          docker exec "$containerID" ls
          docker exec "$containerID" cd /config/workspace/
          docker exec "$containerID" ls
          docker exec "$containerID" bal new test_project_01

      - task: NodeTool@0
        displayName: "Install Node.js"
        inputs:
          versionSpec: ${{parameters.NODE_VERSION}}
      - task: Cache@2
        inputs:
          key: 'npm | "$(Agent.OS)" | package-lock.json'
          restoreKeys: |
            npm | "$(Agent.OS)"
          path: "$(HOME)/.npm"
        displayName: Cache npm

      - task: Cache@2
        inputs:
          key: 'cypress | "$(Agent.OS)"'
          restoreKeys: |
            cypress | "$(Agent.OS)"
          path: "$(HOME)/.cache/Cypress"
        displayName: Cache Cypress Binaries
      - script: |
          cd /.
          cd ${{parameters.CODE_SERVER_TEST_SRC}}
          npm install
        displayName: "Install Cypress"
      - script: |
          cd ${{parameters.CODE_SERVER_TEST_SRC}}
          npm install --dev typescript
          npx cypress run --headless --spec 'cypress/integration/*.ts' -- --record --tag $(Build.BuildNumber)
        displayName: "Run Devportal E2E Tests"

    # - task: Docker@2
    #   displayName: 'Push Docker image'
    #   inputs:
    #     command: push
    #     containerRegistry: 'wso2choreo-control-plane-acr'
    #     repository: $(REPOSITORY)
    #     tags: |
    #       latest
    #       $(TAG)
