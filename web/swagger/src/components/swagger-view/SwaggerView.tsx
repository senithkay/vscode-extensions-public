/**
 * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */

import React from 'react';
import SwaggerUI from "swagger-ui-react";

import "./graph-styles.css";
import "swagger-ui-react/swagger-ui.css";

export const SwaggerView = ({ name, data }: any) => {
    const spec = {
        "openapi": "3.0.0",
        "info": {
            "title": "Choreo AI Performance Analyzer API",
            "description": "The Performance Analyzer API provides performance estimates (latency and throughput) for\nexternal connector calls made from a Choreo service.\nThe estimations are given for multiple concurrencies for the complete Choreo service\n(aggregated latency and throughput) as well as for each individual connector call.\n",
            "version": "1.0.0",
            "contact": {
                "email": "architecture@wso2.com"
            },
            "license": {
                "name": "Apache 2.0",
                "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
            }
        },
        "servers": [
            {
                "description": "Dev environment endpoint",
                "url": "https://app.dv.choreo.dev"
            },
            {
                "description": "Staging environment endpoint",
                "url": "https://app.st.choreo.dev"
            },
            {
                "description": "Production environment endpoint",
                "url": "https://app.choreo.dev"
            }
        ],
        "tags": [
            {
                "name": "Choreo",
                "description": "Endpoints used by Choreo to access the performance analyzer service"
            }
        ],
        "paths": {
            "/get_estimations/2.0": {
                "post": {
                    "tags": [
                        "Choreo"
                    ],
                    "summary": "Performance analyzer endpoint",
                    "description": "This endpoint gives performance estimates for latency and throughput using the node level details.\nThe estimates are generated for multiple concurrencies.\n",
                    "security": [
                        {
                            "bearerAuth": []
                        },
                        {
                            "cookieAuth": []
                        }
                    ],
                    "requestBody": {
                        "description": "The body should contain the connector details, calls made to the connectors\n(including iterations and branching), etc. to construct a performance estimate\nfor a particular Choreo service.\n",
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/choreo-request-body"
                                },
                                "examples": {
                                    "advanced analysis example": {
                                        "$ref": "#/components/examples/choreo-sample-1"
                                    },
                                    "real-time analysis example": {
                                        "$ref": "#/components/examples/choreo-sample-2"
                                    },
                                    "branching example": {
                                        "$ref": "#/components/examples/choreo-sample-3"
                                    }
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Succesful performance estimates generated by the service.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "oneOf": [
                                            {
                                                "$ref": "#/components/schemas/successful-response-advanced"
                                            },
                                            {
                                                "$ref": "#/components/schemas/successful-response-realtime"
                                            },
                                            {
                                                "$ref": "#/components/schemas/error-response"
                                            }
                                        ]
                                    },
                                    "examples": {
                                        "successful mapping for advanced analysis": {
                                            "$ref": "#/components/examples/successful-sugestion-advanced"
                                        },
                                        "successful mapping for realtime analysis": {
                                            "$ref": "#/components/examples/successful-sugestion-realtime"
                                        },
                                        "no data error": {
                                            "$ref": "#/components/examples/no-data-error"
                                        },
                                        "invalid data error": {
                                            "$ref": "#/components/examples/invalid-data-error"
                                        },
                                        "unknown analysis type error": {
                                            "$ref": "#/components/examples/analysis-type-error"
                                        },
                                        "estimator error": {
                                            "$ref": "#/components/examples/estimator-error"
                                        },
                                        "model missing error": {
                                            "$ref": "#/components/examples/model-not-found-error"
                                        }
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Response indicating an unauthorized request.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/error-response"
                                    },
                                    "examples": {
                                        "Authentication error": {
                                            "$ref": "#/components/examples/authentication-error"
                                        }
                                    }
                                }
                            }
                        },
                        "500": {
                            "description": "Internal server error"
                        }
                    }
                }
            }
        },
        "components": {
            "securitySchemes": {
                "bearerAuth": {
                    "description": "Jwt token is split into two parts one is sent in the header as bearer token.",
                    "type": "http",
                    "scheme": "bearer"
                },
                "cookieAuth": {
                    "description": "Jwt token is split into two parts the second part is sent\nin the cookie as cwatf key value.\n",
                    "type": "apiKey",
                    "in": "cookie",
                    "name": "cwatf"
                }
            },
            "schemas": {
                "choreo-request-body": {
                    "type": "object",
                    "required": [
                        "endpoints",
                        "actionInvocations",
                        "analyzeType"
                    ],
                    "properties": {
                        "endpoints": {
                            "type": "object",
                            "description": "Connector endpoints defined in the Choreo service should be given in JSON object structure.\nThe name (key) of the connector endpoint corresponds to a unique identifier.\nThis unique identifier should be of the format 'start_line:start_column:end_line:end_column'.\n",
                            "additionalProperties": {
                                "$ref": "#/components/schemas/endpoint-object"
                            },
                            "example": {
                                "10:20:10:28": {
                                    "pkgID": "ballerina/http",
                                    "name": "Client",
                                    "baseUrl": null,
                                    "pos": "(10:20,10:28)"
                                }
                            }
                        },
                        "actionInvocations": {
                            "type": "object",
                            "description": "A tree like data structure defined in JSON format.\nLeaves are individual connector calls. Branches are added due to if conditions.\n",
                            "properties": {
                                "nextNode": {
                                    "$ref": "#/components/schemas/action-invocation-object"
                                }
                            },
                            "example": {
                                "nextNode": {
                                    "nextNode": null,
                                    "endPointRef": "5:12:5:65",
                                    "name": "forward",
                                    "path": "/1.0.0/backend",
                                    "pos": "choreo.bal:16:51"
                                }
                            }
                        },
                        "analyzeType": {
                            "type": "string",
                            "description": "The type of Analysis to be done. Advanced gives a range of estimates\nfor concurrencies - 1,25,50,75,100 such that these estimates can be used to create a plot.\nRealtime corresponds to the highest throughput estimation.\n",
                            "enum": [
                                "advanced",
                                "realtime"
                            ],
                            "example": "advanced"
                        }
                    }
                },
                "endpoint-object": {
                    "type": "object",
                    "description": "A JSON object describing a single connector endpoint that is used inside a Choreo service.",
                    "required": [
                        "pkgID",
                        "name",
                        "baseUrl",
                        "pos"
                    ],
                    "properties": {
                        "pkgID": {
                            "type": "string",
                            "description": "Ballerina package name of the connector",
                            "example": "ballerina/http"
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the connector client",
                            "example": "Client"
                        },
                        "baseUrl": {
                            "type": "string",
                            "nullable": true,
                            "description": "The URL under which the connector endpoint is hosted.",
                            "example": "https://passthrough-abc.st.choreoapis.dev"
                        },
                        "pos": {
                            "type": "string",
                            "description": "The position of the connector definition in the Ballerina code.\nShould be of the format '(start_line:start_column, end_line:end_column)'.\n",
                            "example": "(10:20,10:28)"
                        }
                    }
                },
                "action-invocation-object": {
                    "type": "object",
                    "nullable": true,
                    "description": "A leaf in the tree which represents an individual connector call.\nCan be recursively defined.\n",
                    "properties": {
                        "endPointRef": {
                            "type": "string",
                            "description": "The unique value which represents the connector endpoint which is being invoked.",
                            "example": "5:12:5:65"
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the connector call",
                            "example": "forward"
                        },
                        "path": {
                            "type": "string",
                            "description": "Path parameter corresponding to this connector call",
                            "example": "/1.0.0/backend"
                        },
                        "pos": {
                            "type": "string",
                            "description": "The position of the connector definition in the Ballerina code.\nShould be of the format 'file_name:start_line:start_column'\nfile_name is the source file where the connector resource function is defined.\n",
                            "example": "choreo.bal:16:51"
                        },
                        "nextNode": {
                            "$ref": "#/components/schemas/action-invocation-object"
                        }
                    },
                    "additionalProperties": {
                        "$ref": "#/components/schemas/action-invocation-object"
                    }
                },
                "successful-response-advanced": {
                    "type": "object",
                    "description": "Response with the performance estimates for multiple concurrencies\nfor individual connector calls as well as complete service.\n",
                    "required": [
                        "graphData",
                        "sequenceDiagramData"
                    ],
                    "properties": {
                        "graphData": {
                            "type": "array",
                            "description": "The estimates that can be used to plot a performance estimation curve.",
                            "items": {
                                "$ref": "#/components/schemas/successful-response-realtime"
                            }
                        },
                        "sequenceDiagramData": {
                            "type": "array",
                            "description": "The estimates that can be used to do the visualization of the individual\nconnector call latency in the low code diagram.\n",
                            "items": {
                                "type": "object",
                                "description": "Data corresponding to a particular concurrency.",
                                "required": [
                                    "concurrency",
                                    "thinkTime",
                                    "values"
                                ],
                                "properties": {
                                    "concurrency": {
                                        "type": "integer",
                                        "description": "The number of concurrent users for which estimation was made",
                                        "example": 10
                                    },
                                    "thinkTime": {
                                        "type": "integer",
                                        "description": "Think time used when calculating the latency and tps.",
                                        "example": 0
                                    },
                                    "values": {
                                        "type": "array",
                                        "description": "Array of action invocation wise broken-down latency and tps values",
                                        "items": {
                                            "type": "object",
                                            "description": "Estimates corresponding to a single connector call (invocation)\nthat is required to show an individual label in the front end.\n",
                                            "required": [
                                                "name",
                                                "latency",
                                                "tps"
                                            ],
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "The position of the connector definition in the Ballerina code.\nShould be of the format 'file_name:start_line:start_column'\nfile_name is the source file where the connector resource function is defined.\n",
                                                    "example": "choreo.bal:9:42"
                                                },
                                                "latency": {
                                                    "type": "number",
                                                    "description": "The latency value corresponding to the particular concurrency in milliseconds.",
                                                    "example": 1028.1497440878045
                                                },
                                                "tps": {
                                                    "type": "number",
                                                    "description": "The TPS (transactions per second) value corresponding to the particular concurrency\nin requests per second.\n",
                                                    "example": 9.726209686383967
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "successful-response-realtime": {
                    "type": "object",
                    "description": "Performance estimates corresponding to a single concurrency.\n",
                    "required": [
                        "concurrency",
                        "latency",
                        "thinkTime",
                        "tps"
                    ],
                    "properties": {
                        "concurrency": {
                            "type": "integer",
                            "description": "The number of concurrent users for which estimation was made",
                            "example": 10
                        },
                        "latency": {
                            "type": "number",
                            "description": "The latency value corresponding to the particular concurrency in milliseconds.",
                            "example": 1028.1497440878045
                        },
                        "tps": {
                            "type": "number",
                            "description": "The TPS (transactions per second) value corresponding to the particular concurrency\nin requests per second.\n",
                            "example": 9.726209686383967
                        },
                        "thinkTime": {
                            "type": "integer",
                            "description": "Think time used when calculating the latency and tps.",
                            "example": 0
                        }
                    }
                },
                "error-response": {
                    "type": "object",
                    "description": "Response when an error occurs in the service",
                    "required": [
                        "type",
                        "message"
                    ],
                    "properties": {
                        "type": {
                            "description": "Type of the error message. Can be either error or info.",
                            "type": "string",
                            "example": "error",
                            "enum": [
                                "error",
                                "info"
                            ]
                        },
                        "message": {
                            "description": "The error message",
                            "type": "string",
                            "example": "InvalidInputParameter"
                        }
                    }
                }
            },
            "examples": {
                "choreo-sample-1": {
                    "description": "A sample input expected by the Performance estimation endpoint (advanced anlysis example)",
                    "value": {
                        "endpoints": {
                            "10:20:10:28": {
                                "pkgID": "ballerina/http",
                                "name": "Client",
                                "baseUrl": "https://passthrough_heavybackend-aathmantharmasanthiran.st.choreoapis.dev",
                                "pos": "(10:20,10:28)"
                            }
                        },
                        "actionInvocations": {
                            "nextNode": {
                                "nextNode": null,
                                "endPointRef": "10:20:10:28",
                                "name": "forward",
                                "path": "/1.0.0/backend",
                                "pos": "choreo.bal:16:51"
                            }
                        },
                        "analyzeType": "advanced"
                    }
                },
                "choreo-sample-2": {
                    "description": "A sample input expected by the Performance estimation endpoint (realtime analysis example)",
                    "value": {
                        "endpoints": {
                            "10:20:10:28": {
                                "pkgID": "ballerina/http",
                                "name": "Client",
                                "baseUrl": null,
                                "pos": "(10:20,10:28)"
                            }
                        },
                        "actionInvocations": {
                            "nextNode": {
                                "nextNode": null,
                                "endPointRef": "10:20:10:28",
                                "name": "forward",
                                "path": "/1.0.0/echo",
                                "pos": "choreo.bal:16:51"
                            }
                        },
                        "analyzeType": "realtime"
                    }
                },
                "choreo-sample-3": {
                    "description": "A sample input to the Performance estimation endpoint (with branching)",
                    "value": {
                        "endpoints": {
                            "5:12:5:65": {
                                "name": "Client",
                                "baseUrl": "http://www.google.lk",
                                "pos": "(5:12,5:65)",
                                "pkgID": "ballerina/http"
                            },
                            "8:12:8:66": {
                                "name": "Client",
                                "baseUrl": "http://www.amazon.com",
                                "pos": "(8:12,8:66)",
                                "pkgID": "ballerina/http"
                            }
                        },
                        "actionInvocations": {
                            "nextNode": {
                                "ifBody": {
                                    "endPointRef": "5:12:5:65",
                                    "name": "get",
                                    "path": "/",
                                    "pos": "choreo.ball:6:39"
                                },
                                "elseBody": {
                                    "endPointRef": "8:12:8:66",
                                    "name": "post",
                                    "path": "/",
                                    "pos": "choreo.ball:9:39"
                                }
                            }
                        },
                        "analyzeType": "advanced"
                    }
                },
                "successful-sugestion-advanced": {
                    "description": "A sample succesful suggestion for requests having analyzeType “advanced\"\n",
                    "value": {
                        "graphData": [
                            {
                                "concurrency": 1,
                                "latency": 102.81497440785515,
                                "thinkTime": 0,
                                "tps": 9.726209686471499
                            },
                            {
                                "concurrency": 10,
                                "latency": 1028.1497440878045,
                                "thinkTime": 0,
                                "tps": 9.726209686383967
                            },
                            {
                                "concurrency": 50,
                                "latency": 5140.748720644654,
                                "thinkTime": 0,
                                "tps": 9.726209685994915
                            },
                            {
                                "concurrency": 75,
                                "latency": 7711.123081159759,
                                "thinkTime": 0,
                                "tps": 9.72620968575176
                            },
                            {
                                "concurrency": 100,
                                "latency": 10281.497441803382,
                                "thinkTime": 0,
                                "tps": 9.726209685508605
                            }
                        ],
                        "sequenceDiagramData": [
                            {
                                "concurrency": 1,
                                "thinkTime": 0,
                                "values": [
                                    {
                                        "latency": 102.81497440785515,
                                        "name": "choreo.bal:16:51",
                                        "tps": 9.726209686471499
                                    }
                                ]
                            },
                            {
                                "concurrency": 10,
                                "thinkTime": 0,
                                "values": [
                                    {
                                        "latency": 1028.1497440878045,
                                        "name": "choreo.bal:16:51",
                                        "tps": 9.726209686383967
                                    }
                                ]
                            },
                            {
                                "concurrency": 50,
                                "thinkTime": 0,
                                "values": [
                                    {
                                        "latency": 5140.748720644654,
                                        "name": "choreo.bal:16:51",
                                        "tps": 9.726209685994915
                                    }
                                ]
                            },
                            {
                                "concurrency": 75,
                                "thinkTime": 0,
                                "values": [
                                    {
                                        "latency": 7711.123081159759,
                                        "name": "choreo.bal:16:51",
                                        "tps": 9.72620968575176
                                    }
                                ]
                            },
                            {
                                "concurrency": 100,
                                "thinkTime": 0,
                                "values": [
                                    {
                                        "latency": 10281.497441803382,
                                        "name": "choreo.bal:16:51",
                                        "tps": 9.726209685508605
                                    }
                                ]
                            }
                        ]
                    }
                },
                "successful-sugestion-realtime": {
                    "description": "A sample succesful suggestion for requests having analyzeType “realtime\"\n",
                    "value": {
                        "concurrency": 10,
                        "latency": 1435.4635750454918,
                        "thinkTime": 0,
                        "tps": 6.966390630764063
                    }
                },
                "authentication-error": {
                    "description": "The provided credentials does not have permission to access Performance analyzer.\n",
                    "value": {
                        "type": "error",
                        "message": "AUTHENTICATION_ERROR"
                    }
                },
                "no-data-error": {
                    "description": "No connector endpoint present in the input.\n",
                    "value": {
                        "type": "info",
                        "message": "NO_DATA"
                    }
                },
                "invalid-data-error": {
                    "description": "Unknown connector calls (invocations) present in the input.\n",
                    "value": {
                        "type": "info",
                        "message": "INVALID_DATA"
                    }
                },
                "analysis-type-error": {
                    "description": "The provided analyzeType is invalid.\n",
                    "value": {
                        "type": "error",
                        "message": "UNKNOWN_ANALYSIS_TYPE"
                    }
                },
                "model-not-found-error": {
                    "description": "The ML model is not found.\n",
                    "value": {
                        "type": "info",
                        "message": "MODEL_NOT_FOUND"
                    }
                },
                "estimator-error": {
                    "description": "Error occured while calculating the estimate.\n",
                    "value": {
                        "type": "error",
                        "message": "ESTIMATOR_ERROR"
                    }
                }
            }
        }
    };
    return (
        <SwaggerUI spec={spec} />
    );
};
