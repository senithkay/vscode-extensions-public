name: 'Release vsix to github and notify'
inputs: 
  isPreRelease:
    default: true
    type: boolean  
  enableCache:
    default: true
    type: boolean  
  ballerina:
    description: Update Ballerina extension version
    type: boolean
    required: false
    default: true
  choreo:
    description: Update Choreo extension version
    type: boolean
    required: false
    default: true      
  version:
    default: 'N/A'
    type: string
    required: false

env:
  ballerina_version: 2201.3.1

runs:
  using: "composite"
  steps:
    - name: Cache env
      if: ${{ inputs.enableCache }}
      uses: gigara/rush-cache@v2

    - uses: actions/setup-node@v3
      with:
        node-version: 16.x

    - uses: pnpm/action-setup@v2
      with:
        version: 7.26.3

    - name: Cache Rush
      if: ${{ inputs.enableCache }}
      uses: actions/cache@v2
      with:
        path: |
          common/temp/install-run
          ~/.rush 
        key: Rush-cache-${{ hashFiles('rush.json') }}

    - name: Cache pnpm
      if: ${{ inputs.enableCache }}
      uses: actions/cache@v3
      with:
        path: |
          common/temp/pnpm-store
          ~/.cache/Cypress   
        key: pnpm-cache-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}

    - uses: ballerina-platform/setup-ballerina@v1
      name: Install Ballerina
      with:
        version: ${{ env.ballerina_version }}

    - name: Remove timestamp - balleina
      shell: bash
      if: ${{ inputs.ballerina }}
      run: |
        cd workspaces/ballerina-extension
        currentVersion=$(node -p "require('./package.json').version")
        if [[ ${#currentVersion} -ge 8 ]]; then
          currentVersionWOPreId=${currentVersion%-*}
          currentVersionNo=${currentVersionWOPreId:0:-8}
          if [[ $currentVersionNo != *?[0-9] ]]; then
            currentVersionNo=${currentVersionNo}0
          fi
          npm version $currentVersionNo --preid beta --no-git-tag-version
        fi
    - name: Remove timestamp - choreo
      shell: bash
      if: ${{ inputs.choreo }}
      run: |
        cd workspaces/choreo-extension
        currentVersion=$(node -p "require('./package.json').version")
        if [[ ${#currentVersion} -ge 8 ]]; then
          currentVersionWOPreId=${currentVersion%-*}
          currentVersionNo=${currentVersionWOPreId:0:-8}
          if [[ $currentVersionNo != *?[0-9] ]]; then
            currentVersionNo=${currentVersionNo}0
          fi            
          npm version $currentVersionNo --preid beta --no-git-tag-version
        fi

    - name: Update ballerina extension versions
      shell: bash
      if: ${{ inputs.version != 'N/A' && inputs.ballerina }}
      run: |
        cd workspaces/ballerina-extension
        npm version ${{ inputs.version }} --preid beta --no-git-tag-version

    - name: Update choreo extension versions
      shell: bash
      if: ${{ inputs.version != 'N/A' && inputs.choreo }}
      run: |
        cd workspaces/choreo-extension
        npm version ${{ inputs.version }} --preid beta --no-git-tag-version

    - name: Get timestamp
      shell: bash
      id: timestamp
      run: |
        timestamp=$(date '+%y%m%d%H')
        echo "timestamp=$timestamp" >> $GITHUB_OUTPUT

    - name: Set prerelase version - ballerina
      shell: bash
      if: ${{ inputs.isPreRelease && inputs.ballerina }}
      run: |
        cd workspaces/ballerina-extension
        currentVersion=$(node -p "require('./package.json').version")
        newVersion=${currentVersion}${{ steps.timestamp.outputs.timestamp }}
        echo $newVersion
        npm version $newVersion --preid beta --no-git-tag-version
        
    - name: Set prerelase version - choreo
      shell: bash
      if: ${{ inputs.isPreRelease && inputs.choreo }}
      run: |
        cd workspaces/choreo-extension
        currentVersion=$(node -p "require('./package.json').version")
        newVersion=${currentVersion}${{ steps.timestamp.outputs.timestamp }}
        echo $newVersion
        npm version $newVersion --preid beta --no-git-tag-version

    - name: Build repo
      shell: bash
      id: build
      run: |
        node common/scripts/install-run-rush.js install
        node common/scripts/install-run-rush.js build --verbose
      env:
        isPreRelease: ${{ inputs.isPreRelease  }}

    - name: Save VSIX
      uses: actions/upload-artifact@v3
      with:
        path: VSIX.zip
        name: VSIX
