name: Publish Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release Version'
        required: true
        default: '3.2.0'
      isPreRelease:
        description: 'Tag created is a pre-release tag'
        required: true
        default: 'false'

jobs:
  publish-release:
    name: Publish Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Ballerina
        run: |
          wget https://github.com/ballerina-platform/ballerina-distribution/releases/download/v2201.1.2/ballerina-2201.1.2-swan-lake-linux-x64.deb
          sudo dpkg -i ballerina-2201.1.2-swan-lake-linux-x64.deb
      - name: Pre release depenency version update
        env:
          GITHUB_TOKEN: ${{ secrets.BALLERINA_BOT_TOKEN }}
        run: |
          echo "Version: ${{ github.event.inputs.version }}"
          git config user.name ${{ secrets.BALLERINA_BOT_USERNAME }}
          git config user.email ${{ secrets.BALLERINA_BOT_EMAIL }}
          git checkout -b release-${{ github.event.inputs.version }}
      - name: Build plugin repository
        run: |
          sudo apt-get install xvfb && xvfb-run --auto-servernum ./gradlew clean build -x test
        env:
          NPM_ACCESS_TOKEN: ${{ secrets.PUBLISH_PAT }}
          IS_RELEASE: ${{ true }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: Publish low-code npm artifacts
        working-directory: ./ballerina-low-code-editor
        run: npm publish --tag next --workspaces
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}

      - name: Rename vsix
        run: |
          find . -type f -name '*.vsix' -exec sh -c 'x="{}"; mv "$x" ballerina.vsix' \;
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.BALLERINA_BOT_TOKEN }}
        with:
          tag_name: "v${{ github.event.inputs.version }}"
          release_name: ${{ github.event.inputs.version }}
          draft: false
          prerelease: ${{ github.event.inputs.isPreRelease }}

      - name: Upload vsix
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: ballerina.vsix
          asset_path: ballerina.vsix
          asset_content_type: application/octet-stream
