name: Release VSIX

on:
  workflow_dispatch:
    inputs:
      isPreRelease:
        required: true
        type: boolean 
      ballerina:
        description: Release Ballerina extension
        type: boolean
        required: true
        default: false
      choreo:
        description: Release Choreo extension
        type: boolean
        required: true
        default: false
      api-chat:
        description: Release API Chat extension
        type: boolean
        required: true
        default: false
      apk:
        description: Release APK extension
        type: boolean
        required: true
        default: false
      eggplant:
        description: Release Eggplant extension
        type: boolean
        required: true
        default: false
      mi:
        description: Release MI extension
        type: boolean
        required: true
        default: false
      version:
        type: choice
        description: 'Enter the version type'
        required: true
        default: 'N/A'
        options:
          - 'patch'
          - 'minor'
          - 'major'    
          - 'N/A'     

jobs:
  Build:
    uses: ./.github/workflows/build.yml
    secrets: inherit
    with:
      isPreRelease: ${{ inputs.isPreRelease }}
      enableCache: false
      ballerina: ${{ inputs.ballerina }}
      choreo: ${{ inputs.choreo }}
      api-chat: ${{ inputs.api-chat }}
      apk: ${{ inputs.apk }}
      eggplant:  ${{ inputs.eggplant }}
      mi:  ${{ inputs.mi }}
      version: ${{ inputs.version }}
      isReleaseBuild: true

  Release:
    name: Release VSIX
    needs: Build
    timeout-minutes: 45
    runs-on: ubuntu-latest
    steps:
      - name: Restore build
        uses: actions/download-artifact@v3
        with:
          name: ExtBuild
          path: ./

      - name: Set up workspace
        run: |
          unzip build.zip
          rm build.zip

      - name: Setup Rush
        uses: gigara/setup-rush@v1
        with:
          pnpm: 7.26.3
          node: 16.x
          cache-rush: false
          cache-pnpm: false
          set-env: false
          rush-install: true

      - name: Get version
        id: vsix
        run: |
          if [[ "${{ github.event.inputs.ballerina }}" == "true" ]]; then
            file=$(ls ballerina*.vsix)
            fileName=${file#*-}
            version=ballerina-${fileName%.*}
          fi  
          if [[ "${{ github.event.inputs.choreo }}" == "true" ]]; then
            file=$(ls choreo*.vsix)
            fileName=${file#*-}
            version=$version+choreo-${fileName%.*}
          fi  
          if [[ "${{ github.event.inputs.api-chat }}" == "true" ]]; then
            file=$(ls api-chat*.vsix)
            fileName=${file#*-}
            version=$version+api-chat-${fileName%.*}  
          fi  
          if [[ "${{ github.event.inputs.mi }}" == "true" ]]; then
            file=$(ls micro-integrator*.vsix)
            fileName=${file#*-}
            version=$version+micro-integrator-${fileName%.*}  
          fi
          echo $version
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Create a release in wso2/ballerina-vscode repo
        if: ${{ github.event.inputs.ballerina == 'true' }}
        uses: ./.github/actions/release
        with:
          repo: wso2/ballerina-vscode
          name: ballerina
          token: ${{ secrets.PUBLISH_PAT }}
          threadId: ${{ github.run_id }}

      - name: Create a release in wso2/choreo-vscode repo
        if: ${{ github.event.inputs.choreo == 'true' }}
        uses: ./.github/actions/release
        with:
          repo: wso2/choreo-vscode
          name: choreo
          token: ${{ secrets.PUBLISH_PAT }}
          threadId: ${{ github.run_id }}

      - name: Create a release in wso2/api-chat-vscode repo
        if: ${{ github.event.inputs.api-chat == 'true' }}
        uses: ./.github/actions/release
        with:
          repo: wso2/api-chat-vscode
          name: api-chat
          token: ${{ secrets.PUBLISH_PAT }}
          threadId: ${{ github.run_id }}

      - name: Create a release in wso2/apk repo
        if: ${{ github.event.inputs.apk == 'true' }}
        uses: ./.github/actions/release
        with:
          repo: wso2/apk
          name: apk
 
      - name: Create a release in wso2/mi-vscode repo
        if: ${{ github.event.inputs.mi == 'true' }}
        uses: ./.github/actions/release
        with:
          repo: wso2/mi-vscode
          token: ${{ secrets.MI_PUBLISH_PAT }}
          name: micro-integrator
          chatAPI: ${{ secrets.MI_EXT_CHAT_API }}

      - name: Create PR and notify
        uses: ./.github/actions/pr
        with:
          version: v${{ steps.vsix.outputs.version }}
          threadId: ${{ github.run_id }}
          bot_username: ${{ secrets.BALLERINA_BOT_USERNAME }}
          bot_email: ${{ secrets.BALLERINA_BOT_EMAIL }}
          bot_token: ${{ secrets.BALLERINA_BOT_TOKEN }}
          ballerina: ${{ inputs.ballerina }}
          choreo: ${{ inputs.choreo }}
          apk: ${{ inputs.apk }}
          apiChat: ${{ inputs.api-chat }}

  Notify:
    needs: [Release]
    if: ${{ always() && contains(needs.*.result, 'failure') && github.repository == 'wso2-enterprise/vscode-extensions'}}
    runs-on: ubuntu-latest
    steps:
      - name: "Release Notification"
        run: |
          body=$(cat << EOF
          {
            "cards": [
              {
                "header": {
                    "title": "Release Failed"
                },
                "sections": [
                  {
                    "widgets": [
                      {
                        "textParagraph": {
                            "text": "<b>&#x274C; Repository: <font color=\"#ff0000\">wso2-enterprise/vscode-extensions</font></b>"
                        }
                      },
                      {
                        "keyValue": {
                          "topLabel": "Workflow run ID",
                          "content": "${{ github.run_id }}",
                          "button": {
                            "textButton": {
                              "text": "View Workflow",
                              "onClick": {
                                "openLink": {
                                  "url": "https://github.com/wso2-enterprise/vscode-extensions/actions/runs/${{ github.run_id }}"
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          }
          EOF
          )
          curl \
            -X POST \
            -H 'Content-Type: application/json' \
            "https://chat.googleapis.com/v1/spaces/AAAAtkMpL8k/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=GmcsSshpc6BD68bOPu4wadJ0WjQLbDQBag3zwYPBoZ0%3D&threadKey=${{ github.run_id }}" \
            -d "$body"
