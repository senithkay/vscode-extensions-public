/*
 * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.
 *
 * This software is the property of WSO2 Inc. and its suppliers, if any.
 * Dissemination of any information or reproduction of any material contained
 * herein is strictly forbidden, unless permitted by WSO2 in accordance with
 * the WSO2 Commercial License available at http://wso2.com/licenses.
 * For specific language governing the permissions and limitations under
 * this license, please see the license as well as any agreement youâ€™ve
 * entered into with WSO2 governing the purchase of this software and any
 * associated services.
 */
$default_color :#5566d5;
$warning_color : #FF9D52;
$error_color : #FE523C;
$active-warning-color :#ffc1916c;
$active_error_color : #e09f9667;
$active_color : #c0ceff8a;


.process-rect-styles {
    stroke-miterlimit: 10;
    stroke-width: 1px !important;
    fill: url(#ProcessLinearGradient) #fafafc;
    filter: url(#ProcessFilterDefault) #fafafc;
}

.process-rect-active-styles {
    stroke: $active_color;
    stroke-miterlimit: 10;
    stroke-width: 9;
    fill: url(#ProcessLinearGradient) #fafafc;
    filter: none;
}

.process-text-styles {
    font-weight: 500;
    fill: #40404b;
    font-size: 12px;
    font-family: inherit;
    letter-spacing: 0.05em;
    text-anchor: middle;
    text-align: center;
    user-select: none;
}

.process-icon-text-style {
    height: 12px;
    width: 24px;
    font-family: inherit;
    font-size: 12px;
    letter-spacing: 0;
    line-height: 12px;
    font-weight: normal;
}

.click-effect-style {
    stroke-width: 1px;
    stroke: $default_color;
}

.main-process-wrapper {
    &.data-processor {
        .process-rect {
            .data-processor {
                rect {
                    @extend .process-rect-styles;
                    stroke: $default_color;
                }

                .process-text {
                    tspan {
                        @extend .process-text-styles;
                    }
                }

                .process-icon {
                    fill: $default_color;
                }

                .log-icon {
                    .log-icon-path{
                        fill:$default_color
                    }
                    .log-icon-com-shape{
                        fill:#ccd1f2
                    }
                }
                .call-icon {
                    .call-icon-path{
                        fill: #ccd1f2
                    }
                    .call-icon-com-shape{
                        fill:$default_color
                    }
                }

                .process-icon-text {
                    @extend .process-icon-text-style;
                    fill: $default_color;
                }

                &:hover {
                    rect {
                        cursor: pointer;
                        stroke: $active_color;
                        stroke-miterlimit: 10;
                        stroke-width: 9 !important;
                        fill: url(#ProcessLinearGradient) #fafafc;
                        filter: none;
                    }

                    .click-effect {
                        stroke-width: 1px !important;
                        stroke: $default_color !important;
                    }
                }

                &:active {
                    rect {
                        cursor: pointer;
                        stroke: $active_color;
                        stroke-width: 9 !important;
                        @extend .process-rect-active-styles;
                    }

                    .click-effect {
                        stroke-width: 1px !important;
                        stroke: $default_color !important;
                    }
                }
            }

            .data-processor-error {
                rect {
                    @extend .process-rect-styles;
                    stroke: $error_color;
                }

                .process-text {
                    tspan {
                        @extend .process-text-styles;
                        fill:$error_color
                    }
                }

                .process-icon {
                    fill: $error_color;
                }

                .log-icon {
                    .log-icon-path{
                        fill:$error_color
                    }
                    .log-icon-com-shape{
                        fill:$error_color
                    }
                }
                .call-icon {
                    .call-icon-path{
                        fill: $error_color
                    }
                    .call-icon-com-shape{
                        fill:$error_color
                    }
                }

                .process-icon-text {
                    @extend .process-icon-text-style;
                    fill: $error_color;
                }

                &:hover {
                    rect {
                        cursor: pointer;
                        stroke: $active_error_color;
                        stroke-miterlimit: 10;
                        stroke-width: 9 !important;
                        fill: url(#ProcessLinearGradient) #fafafc;
                        filter: none;
                    }

                    .click-effect {
                        stroke-width: 1px !important;
                        stroke: $error_color !important;
                    }
                }

                &:active {
                    rect {
                        cursor: pointer;
                        stroke: $active_error_color;
                        stroke-width: 9 !important;
                        @extend .process-rect-active-styles;
                    }

                    .click-effect {
                        stroke-width: 1px !important;
                        stroke: $error_color !important;
                    }
                }
            }

            .data-processor-warning {
                rect {
                    @extend .process-rect-styles;
                    stroke: $warning_color;
                }

                .process-text {
                    tspan {
                        @extend .process-text-styles;
                        fill:$warning_color
                    }
                }

                .process-icon {
                    fill: $warning_color
                }

                .log-icon {
                    .log-icon-path{
                        fill:$warning_color
                    }
                    .log-icon-com-shape{
                        fill:$warning_color
                    }
                }
                .call-icon {
                    .call-icon-path{
                        fill: $warning_color
                    }
                    .call-icon-com-shape{
                        fill:$warning_color
                    }
                }

                .process-icon-text {
                    @extend .process-icon-text-style;
                    fill: $warning_color;
                }

                &:hover {
                    rect {
                        cursor: pointer;
                        stroke: $active_warning_color;
                        stroke-miterlimit: 10;
                        stroke-width: 9 !important;
                        fill: url(#ProcessLinearGradient) #fafafc;
                        filter: none;
                    }

                    .click-effect {
                        stroke-width: 1px !important;
                        stroke: $warning_color !important;
                    }
                }

                &:active {
                    rect {
                        cursor: pointer;
                        stroke: $active_warning_color;
                        stroke-width: 9 !important;
                        @extend .process-rect-active-styles;
                    }

                    .click-effect {
                        stroke-width: 1px !important;
                        stroke: $warning_color !important;
                    }
                }
            }
        }
    }

    //active-data-processor: when the process is in draft mode and active
    &.active-data-processor {
        .process-rect {
            rect {
                cursor: pointer;
                stroke: $active_color;
                stroke-width: 9 !important;
                @extend .process-rect-active-styles;
            }

            .process-text {
                tspan {
                    @extend .process-text-styles;
                }
            }

            .process-icon {
                fill: $default_color;
            }

            .click-effect {
                stroke-width: 1px !important;
                stroke: $default_color !important;
            }
        }
    }
}
