apiVersion: core.choreo.dev/v1alpha1
kind: ComponentConfig
metadata:
    # +required Name of the component that this configuration belongs to.
    name: greeting-service
    # +required Project name of the component that this component belongs to. Cannot be changed after creation.
    projectName: proj-1
spec:
    # +optional Build instructions for the component.
    build:
        # +required Name of the branch. This is used to identify the corresponding deployment track.
        branch: main
        # +optional Git commit hash for the build. If not provided, the latest commit in the branch will be used.
        revision: 3e8b9a0
    # +optional Docker image details for the BYOI components.
    image:
        # +required Image registry.
        registry: docker.io
        # +required Image repository.
        repository: mirage20/byoc-service
        # +required Image tag.
        tag: v1.0.0
    # +optional Incoming connection details for the component (AKA Endpoints).
    inbound:
        # +required Unique name for the endpoint. (This name will be used when generating the managed API)
        - name: greeter-http
          # +required Numeric port value that gets exposed via this endpoint
          port: 9090
          # +required Type of the traffic this endpoint is accepting. Example: REST, GraphQL, etc.
          # Allowed values: REST, GraphQL, GRPC, TCP, UDP
          type: REST
          # +optional Network level visibility of this endpoint. Defaults to Project
          # Accepted values: Project|Organization|Public.
          visibility: Public
          # +optional Context (base path) of the API that exposed via this endpoint.
          # This is mandatory if the endpoint type is set to REST or GraphQL.
          context: /hello
          # +optional Path to the schema definition file. Defaults to wild card route if not provided
          # This is only applicable to REST endpoint types.
          # The path should be relative to the docker context.
          schemaFilePath: greeting_openapi.yaml
        - name: greeter-grpc
          port: 9091
          type: GRPC
          visibility: Project
    # +optional Outgoing connection details for the component.
    outbound:
        # +optional Defines the service references from the internal API marketplace.
        serviceReferences:
            # +required Name of the service reference.
            - name: service-1
              # +required Name of the dependent configuration instance.
              dependentConfig: config-1
              # +optional Environment variables to be injected to the component from the dependent configuration.
              env:
                  # +required Key name of the dependent configuration.
                  - from: service.url
                    # +required Environment variable name.
                    to: SERVICE_1_URL
                  - from: client.id
                    to: SERVICE_1_CLIENT_ID
                  - from: client.secret
                    to: SERVICE_1_CLIENT_SECRET
                  - from: token.url
                    to: AUTH_TOKEN_URL
            - name: service-2
              dependentConfig: config-2
    # +optional Runtime configuration key and group names.
    configurations:
        # +optional List of configuration keys and their mappings to be injected to the component.
        # These are the keys that are not related to any of the service connections.
        keys:
            - name: key-1
              envName: KEY_1
            - name: key-2
              volume:
                  mountPath: /etc/cert.pem
        # +optional List of configuration group mappings to be injected to the component.
        groups:
            - name: logging-config
              env:
                  - from: log.level
                    to: LOG_LEVEL
                  - from: log.mode
                    to: LOG_MODE
            - name: org-tls-cert
              volume:
                  mountPath: /etc/certs
                  files:
                      - from: tls-cert
                        to: crt.pem
                      - from: tls-key
                        to: key.pem
