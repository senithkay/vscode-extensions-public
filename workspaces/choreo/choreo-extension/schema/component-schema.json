{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://example.com/schemas/config",
    "title": "Choreo Component Configuration",
    "description": "Template configurations for Choreo",
    "type": "object",
    "properties": {
        "apiVersion": {
            "const": "core.choreo.dev/v1alpha1"
        },
        "kind": {
            "enum": ["ComponentConfig"]
        }
    },
    "definitions": {
        "name": {
            "type": "string",
            "description": "Name of the component that this configuration belongs to.",
            "minLength": 1,
            "const": ""
        },
        "projectName": {
            "type": "string",
            "description": "Project name of the component that this component belongs to. Cannot be changed after creation.",
            "minLength": 1,
            "const": ""
        },
        "branch": {
            "type": "string",
            "description": "Name of the branch. This is used to identify the corresponding deployment track.",
            "enum": [""]
        }
    },
    "allOf": [
        {
            "if": {
                "properties": {
                    "kind": {
                        "const": "ComponentConfig"
                    }
                }
            },
            "then": {
                "properties": {
                    "metadata": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "$ref": "#/definitions/name"
                            },
                            "projectName": {
                                "$ref": "#/definitions/projectName"
                            },
                            "annotations": {
                                "type": "object",
                                "description": "List of arbitrary key, value pairs.",
                                "properties": {
                                    "componentType": {
                                        "enum": ["service", "web-app", "scheduled-task", "manual-task", "web-hook"]
                                    }
                                }    
                            }
                        },
                        "required": ["name", "projectName"]
                    },
                    "spec": {
                        "type": "object",
                        "properties": {
                            "build": {
                                "type": "object",
                                "properties": {
                                    "branch": {
                                        "$ref": "#/definitions/branch"
                                    },
                                    "revision": {
                                        "type": "string",
                                        "description": "Git commit hash for the build. If not provided, the latest commit in the branch will be used.",
                                        "minLength": 1,
                                        "default": ""
                                    }
                                },
                                "required": ["branch"]
                            },
                            "image": {
                                "type": "object",
                                "properties": {
                                    "registry": {
                                        "type": "string",
                                        "description": "Image registry.",
                                        "minLength": 1,
                                        "default": "docker.io"
                                    },
                                    "repository": {
                                        "type": "string",
                                        "description": "Image repository.",
                                        "minLength": 1,
                                        "default": "mirage20/byoc-service"
                                    },
                                    "tag": {
                                        "type": "string",
                                        "description": "Image tag.",
                                        "minLength": 1,
                                        "pattern": "v\\d+\\.\\d+\\.\\d+",
                                        "default": "v1.0.0"
                                    }
                                },
                                "required": ["registry", "repository", "tag"]
                            },
                            "inbound": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Unique name for the endpoint. (This name will be used when generating the managed API)",
                                            "minLength": 1,
                                            "default": "greeter-http"
                                        },
                                        "port": {
                                            "type": "integer",
                                            "description": "Numeric port value that gets exposed via this endpoint",
                                            "default": 9090
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "Type of the traffic this endpoint is accepting. Example: REST, GraphQL, etc.",
                                            "enum": ["REST", "GraphQL", "GRPC", "TCP", "UDP"],
                                            "default": "REST"
                                        },
                                        "visibility": {
                                            "type": "string",
                                            "description": "Network level visibility of this endpoint. Defaults to Project",
                                            "enum": ["Project", "Organization", "Public"],
                                            "default": "Project"
                                        },
                                        "context": {
                                            "type": "string",
                                            "description": "Context (base path) of the API that exposed via this endpoint. This is mandatory if the endpoint type is set to REST or GraphQL.",
                                            "default": "/hello"
                                        },
                                        "schemaFilePath": {
                                            "type": "string",
                                            "description": "Path to the schema definition file. Defaults to wild card route if not provided. This is only applicable to REST endpoint types. The path should be relative to the docker context.",
                                            "default": "greeting_openapi.yaml"
                                        }
                                    },
                                    "required": ["name", "port", "type"]
                                }
                            },
                            "outbound": {
                                "type": "object",
                                "properties": {
                                    "serviceReferences": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "Name of the service reference.",
                                                    "minLength": 1,
                                                    "default": "service"
                                                },
                                                "connectionConfig": {
                                                    "type": "string",
                                                    "description": "Name of the connection configuration instance.",
                                                    "minLength": 1,
                                                    "default": "config"
                                                },
                                                "env": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "from": {
                                                                "type": "string",
                                                                "description": "Key name of the dependent configuration.",
                                                                "minLength": 1,
                                                                "default": "service.url"
                                                            },
                                                            "to": {
                                                                "type": "string",
                                                                "description": "Environment variable name.",
                                                                "minLength": 1,
                                                                "default": "SERVICE_URL"
                                                            }
                                                        },
                                                        "required": ["from", "to"]
                                                    }
                                                }
                                            },
                                            "required": ["name", "connectionConfig"]
                                        }
                                    }
                                }
                            },
                            "configurations": {
                                "type": "object",
                                "properties": {
                                    "keys": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "Name of the configuration key.",
                                                    "minLength": 1,
                                                    "default": "key"
                                                },
                                                "envName": {
                                                    "type": "string",
                                                    "description": "Environment variable name.",
                                                    "minLength": 1,
                                                    "default": "KEY"
                                                },
                                                "volume": {
                                                    "type": "object",
                                                    "properties": {
                                                        "mountPath": {
                                                            "type": "string",
                                                            "description": "Mount path for the volume.",
                                                            "minLength": 1,
                                                            "default": "/etc/cert.pem"
                                                        }
                                                    },
                                                    "required": ["mountPath"]
                                                }
                                            },
                                            "oneOf": [{ "required": ["envName"] }, { "required": ["volume"] }]
                                        }
                                    },
                                    "groups": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "Name of the configuration group.",
                                                    "minLength": 1,
                                                    "default": "logging-config"
                                                },
                                                "env": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "from": {
                                                                "type": "string",
                                                                "description": "Key name of the dependent configuration.",
                                                                "minLength": 1,
                                                                "default": "log.level"
                                                            },
                                                            "to": {
                                                                "type": "string",
                                                                "description": "Environment variable name.",
                                                                "minLength": 1,
                                                                "default": "LOG_LEVEL"
                                                            }
                                                        },
                                                        "required": ["from", "to"]
                                                    }
                                                },
                                                "volume": {
                                                    "type": "object",
                                                    "properties": {
                                                        "mountPath": {
                                                            "type": "string",
                                                            "description": "Mount path for the volume.",
                                                            "minLength": 1,
                                                            "default": "/etc/certs"
                                                        },
                                                        "files": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "from": {
                                                                        "type": "string",
                                                                        "description": "Path to the file in the dependent configuration.",
                                                                        "minLength": 1,
                                                                        "default": "tls-cert"
                                                                    },
                                                                    "to": {
                                                                        "type": "string",
                                                                        "description": "Path to the file in the component.",
                                                                        "minLength": 1,
                                                                        "default": "crt.pem"
                                                                    }
                                                                },
                                                                "required": ["from", "to"]
                                                            }
                                                        }
                                                    },
                                                    "required": ["mountPath"]
                                                }
                                            },
                                            "oneOf": [{ "required": ["env"] }, { "required": ["volume"] }]
                                        }
                                    }
                                }
                            }
                        },
                        "oneOf": [{ "required": ["build"] }, { "required": ["image"] }]
                    }
                },
                "required": ["metadata", "spec"]
            }
        }
    ],
    "required": ["apiVersion", "kind"]
}
