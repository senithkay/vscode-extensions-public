{"version":3,"file":"index-stories.4d037901.iframe.bundle.js","mappings":";;AAeA;AAKA;;;;;;;;;;;;;AAmBA;;;;;;;;;;;ACbA;AACA;AAEA;AACA;AAEA;;;;ACXA;;;ACFA;;;;;;;;;;;;AAaA;;;;;AAKA;;AAIA;;;;;;;;;AAUA;;;;;;;;;AAUA;;;;;;;AAQA;;;;;;;;AC5CA;;;;;;;;AASA;;;;;;AAOA;;;;;;;;;;;;;;;;;AC/BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ADMA;;;;;;;;;;AEWA;;;;;;ACJA;;;;ACHA;AAJA;;;AAUA;;;;AAIA;;AAGA;;;;;AAKA;;;;AAkBA;;;;;AARA;;AAGA;AACA;;;AAIA;;;AAGA;;;;;;;;AASA;;;;;;;;AASA;;;;;AAMA;;;;;;;;;;;;;;;ACjEA;;;;AAKA;;AAGA;;;ACZA;;;;ACCA;;;;;;;;;;;;;;;;;;;;;;;;;ACoBA;ACzBA;;;;;;;AAQA;;;;;ADPA","sources":["webpack://@wso2-enterprise/mi-diagram/./src/Canvas.tsx","webpack://@wso2-enterprise/mi-diagram/../../common-libs/ui-toolkit/lib/components/DiagramNavigationWrapper/CustomTransformLayer.js","webpack://@wso2-enterprise/mi-diagram/../../common-libs/ui-toolkit/lib/components/DiagramNavigationWrapper/CustomCanvasWidget.js","webpack://@wso2-enterprise/mi-diagram/../../common-libs/ui-toolkit/lib/components/AutoComplete/Dropdown.js","webpack://@wso2-enterprise/mi-diagram/../../common-libs/ui-toolkit/lib/components/AutoComplete/AutoComplete.js","webpack://@wso2-enterprise/mi-diagram/../../common-libs/ui-toolkit/lib/components/ProgressIndicator/ProgressIndicator.js","webpack://@wso2-enterprise/mi-diagram/../../common-libs/ui-toolkit/lib/components/Stepper/CompletedStepCard.js","webpack://@wso2-enterprise/mi-diagram/../../common-libs/ui-toolkit/lib/components/Stepper/IncompleteStepCard.js","webpack://@wso2-enterprise/mi-diagram/../../common-libs/ui-toolkit/lib/components/Stepper/Stepper.js","webpack://@wso2-enterprise/mi-diagram/../../common-libs/ui-toolkit/lib/components/Commons/ErrorBanner.js","webpack://@wso2-enterprise/mi-diagram/../../common-libs/ui-toolkit/lib/components/Commons/RequiredInput.js","webpack://@wso2-enterprise/mi-diagram/../../common-libs/ui-toolkit/lib/components/Icon/Icon.js","webpack://@wso2-enterprise/mi-diagram/../../common-libs/ui-toolkit/lib/components/ComponentCard/ComponentCard.js","webpack://@wso2-enterprise/mi-diagram/../../common-libs/ui-toolkit/lib/styles/DataGrid.js"],"sourcesContent":["/**\n * Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 LLC. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein in any form is strictly forbidden, unless permitted by WSO2 expressly.\n * You may not alter or remove any copyright or other notice from copies of this content.\n */\n// tslint:disable: no-implicit-dependencies jsx no-var-requires\nimport React from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nconst background = require('./resources/assets/PatternBg.svg') as string;\n\nconst headerHeight = 110;\n\nexport const Container: React.FC<any> = styled.div`\n  // should take up full height minus the height of the header\n  height: calc(100vh - ${headerHeight}px);\n  background-image: url('${background}');\n  background-repeat: repeat;\n  display: flex;\n  font-family: 'GilmerRegular';\n\n  > * {\n    height: 100%;\n    min-height: 100%;\n    width: 100%;\n  }\n  svg:not(:root) {\n    overflow: visible;\n  }\n`;\n\ntype Props = {\n\tchildren: React.ReactNode\n}\n\nexport const CanvasContainer: React.FC<Props> = (props) => {\n\treturn (\n\t\t<Container className=\"dotted-background\">\n\t\t\t{props.children}\n\t\t</Container>\n\t);\n}\n","/**\n * Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 LLC. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein in any form is strictly forbidden, unless permitted by WSO2 expressly.\n * You may not alter or remove any copyright or other notice from copies of this content.\n */\nimport React from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n// tslint:disable-next-line:no-namespace\nvar S;\n(function (S) {\n    const shared = css `\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      position: absolute;\n      pointer-events: none;\n      transform-origin: 0 0;\n      width: 100%;\n      height: 100%;\n      overflow: visible;\n    `;\n    S.DivLayer = styled.div `\n      ${shared}\n    `;\n    S.SvgLayer = styled.svg `\n      ${shared}\n    `;\n})(S || (S = {}));\nexport class CustomTransformLayerWidget extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    getTransform() {\n        const model = this.props.layer.getParent();\n        return `\n\t\t\ttranslate(\n\t\t\t\t${model.getOffsetX()}px,\n\t\t\t\t${model.getOffsetY()}px)\n\t\t\tscale(\n\t\t\t\t${model.getZoomLevel() / 100.0}\n\t\t\t)\n  \t`;\n    }\n    getTransformStyle() {\n        if (this.props.layer.getOptions().transformed) {\n            if (!this.props.isNodeFocused) {\n                return {\n                    transform: this.getTransform()\n                };\n            }\n            return {\n                transform: this.getTransform(),\n                transition: 'transform 0.5s ease-in-out'\n            };\n        }\n        return {};\n    }\n    render() {\n        if (this.props.layer.getOptions().isSvg) {\n            return React.createElement(S.SvgLayer, { style: this.getTransformStyle() }, this.props.children);\n        }\n        return React.createElement(S.DivLayer, { style: this.getTransformStyle() }, this.props.children);\n    }\n}\n","/**\n * Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 LLC. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein in any form is strictly forbidden, unless permitted by WSO2 expressly.\n * You may not alter or remove any copyright or other notice from copies of this content.\n */\n// tslint:disable: jsx-no-lambda jsx-no-multiline-js no-unused-expression\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { SmartLayerWidget } from '@projectstorm/react-canvas-core';\nimport { CustomTransformLayerWidget } from \"./CustomTransformLayer\";\n// tslint:disable-next-line:no-namespace\nvar S;\n(function (S) {\n    S.Canvas = styled.div `\n      position: relative;\n      cursor: move;\n      overflow: hidden;\n    `;\n})(S || (S = {}));\nexport class CustomCanvasWidget extends React.Component {\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.state = {\n            action: null,\n            diagramEngineListener: null\n        };\n    }\n    componentWillUnmount() {\n        this.props.engine.deregisterListener(this.canvasListener);\n        this.props.engine.setCanvas(null);\n        document.removeEventListener('keyup', this.keyUp);\n        document.removeEventListener('keydown', this.keyDown);\n    }\n    registerCanvas() {\n        this.props.engine.setCanvas(this.ref.current);\n        this.props.engine.iterateListeners(list => {\n            list.rendered && list.rendered();\n        });\n    }\n    componentDidUpdate() {\n        this.registerCanvas();\n    }\n    componentDidMount() {\n        this.canvasListener = this.props.engine.registerListener({\n            repaintCanvas: () => {\n                this.forceUpdate();\n            }\n        });\n        this.keyDown = (event) => {\n            this.props.engine.getActionEventBus().fireAction({ event });\n        };\n        this.keyUp = (event) => {\n            this.props.engine.getActionEventBus().fireAction({ event });\n        };\n        document.addEventListener('keyup', this.keyUp);\n        document.addEventListener('keydown', this.keyDown);\n        this.registerCanvas();\n    }\n    render() {\n        const engine = this.props.engine;\n        const model = engine.getModel();\n        return (React.createElement(S.Canvas, { className: this.props.className, ref: this.ref, onWheel: event => {\n                this.props.engine.getActionEventBus().fireAction({ event });\n            }, onMouseDown: event => {\n                this.props.engine.getActionEventBus().fireAction({ event });\n            }, onMouseUp: event => {\n                this.props.engine.getActionEventBus().fireAction({ event });\n            }, onMouseMove: event => {\n                this.props.engine.getActionEventBus().fireAction({ event });\n            }, onTouchStart: event => {\n                this.props.engine.getActionEventBus().fireAction({ event });\n            }, onTouchEnd: event => {\n                this.props.engine.getActionEventBus().fireAction({ event });\n            }, onTouchMove: event => {\n                this.props.engine.getActionEventBus().fireAction({ event });\n            } }, model.getLayers().map(layer => {\n            return (React.createElement(CustomTransformLayerWidget, { layer: layer, key: layer.getID(), isNodeFocused: this.props.isNodeFocused },\n                React.createElement(SmartLayerWidget, { layer: layer, engine: this.props.engine, key: layer.getID() })));\n        })));\n    }\n}\n","/*\n *  Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com). All Rights Reserved.\n *\n *  This software is the property of WSO2 LLC. and its suppliers, if any.\n *  Dissemination of any information or reproduction of any material contained\n *  herein is strictly forbidden, unless permitted by WSO2 in accordance with\n *  the WSO2 Commercial License available at http://wso2.com/licenses.\n *  For specific language governing the permissions and limitations under\n *  this license, please see the license as well as any agreement youâ€™ve\n *  entered into with WSO2 governing the purchase of this software and any\n *  associated services.\n */\nimport React, { Fragment } from 'react';\nimport { css, cx } from \"@emotion/css\";\nimport styled from \"@emotion/styled\";\nimport { Combobox, Transition } from '@headlessui/react';\nconst DropdownContainer = styled.div `\n    position: absolute;\n    max-height: 100px;\n    width: ${(props) => `calc(var(--input-min-width) + ${props.widthOffset}px)`};\n    overflow: auto;\n    background-color: var(--vscode-editor-background);\n    color: var(--vscode-editor-foreground);\n    outline: none;\n    border: 1px solid var(--vscode-list-dropBackground);\n    padding-top: 5px;\n    padding-bottom: 5px;\n    ul {\n        margin: 0;\n        padding: 0;\n    }\n`;\nconst ComboboxOption = styled.div `\n    position: relative;\n    cursor: default;\n    user-select: none;\n    color: var(--vscode-editor-foreground);\n    background-color: ${(props) => (props.active ? 'var(--vscode-editor-selectionBackground)' :\n    'var(--vscode-editor-background)')};\n    list-style: none;\n`;\nexport const OptionContainer = cx(css `\n    color: var(--vscode-editor-foreground);\n    background-color: var(--vscode-editor-selectionBackground);\n    padding: 3px 5px 3px 5px;\n    list-style-type: none;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    max-width: 100%;\n`);\nexport const ActiveOptionContainer = cx(css `\n    color: var(--vscode-editor-foreground);\n    background-color: var(--vscode-editor-background);\n    list-style-type: none;\n    padding: 3px 5px 3px 5px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    max-width: 100%;\n`);\nexport const NothingFound = styled.div `\n    position: relative;\n    cursor: default;\n    user-select: none;\n    padding-left: 8px;\n    color: var(--vscode-editor-foreground);\n    background-color: var(--vscode-editor-background);\n`;\nexport function Dropdown(props) {\n    const { query, filteredResults, notItemsFoundMessage, widthOffset = 108, onQueryChange } = props;\n    const handleQueryChange = (q) => {\n        onQueryChange(q);\n    };\n    const ComboboxOptionContainer = ({ active }) => {\n        return active ? OptionContainer : ActiveOptionContainer;\n    };\n    const handleAfterLeave = () => {\n        handleQueryChange('');\n    };\n    return (React.createElement(Transition, { as: Fragment, afterLeave: handleAfterLeave },\n        React.createElement(DropdownContainer, { widthOffset: widthOffset },\n            React.createElement(Combobox.Options, null, filteredResults.length === 0 && query !== '' ? (React.createElement(NothingFound, null, notItemsFoundMessage || 'No options')) : (filteredResults.map((item, i) => {\n                return (React.createElement(ComboboxOption, { key: i },\n                    React.createElement(Combobox.Option, { className: ComboboxOptionContainer, value: item, key: item }, item)));\n            }))))));\n}\n","/*\n *  Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com). All Rights Reserved.\n *\n *  This software is the property of WSO2 LLC. and its suppliers, if any.\n *  Dissemination of any information or reproduction of any material contained\n *  herein is strictly forbidden, unless permitted by WSO2 in accordance with\n *  the WSO2 Commercial License available at http://wso2.com/licenses.\n *  For specific language governing the permissions and limitations under\n *  this license, please see the license as well as any agreement youâ€™ve\n *  entered into with WSO2 governing the purchase of this software and any\n *  associated services.\n */\nimport React, { useRef, useState } from 'react';\nimport { css, cx } from \"@emotion/css\";\nimport { Combobox } from '@headlessui/react';\nimport { Dropdown } from \"./Dropdown\";\nconst ComboboxButtonContainerActive = cx(css `\n    position: absolute;\n    padding-right: 5px;\n    background-color: var(--vscode-input-background);\n    border-right: 1px solid var(--vscode-focusBorder);\n    border-bottom: 1px solid var(--vscode-focusBorder);\n    border-top: 1px solid var(--vscode-focusBorder);\n    border-left: 0 solid var(--vscode-focusBorder);\n`);\nconst ComboboxButtonContainer = cx(css `\n    position: absolute;\n    padding-right: 5px;\n    background-color: var(--vscode-input-background);\n    border-right: 1px solid var(--vscode-dropdown-border);\n    border-bottom: 1px solid var(--vscode-dropdown-border);\n    border-top: 1px solid var(--vscode-dropdown-border);\n    border-left: 0 solid var(--vscode-dropdown-border);\n`);\nexport const DropdownIcon = cx(css `\n    color: var(--vscode-symbolIcon-colorForeground);\n    padding-top: 5px;\n    height: 20px;\n    width: 10px;\n    padding-right: 8px;\n`);\nexport const SearchableInput = cx(css `\n    color: var(--vscode-input-foreground);\n    background-color: var(--vscode-input-background);\n    height: 25px;\n    width: 170px;\n    padding-left: 8px;\n    border-left: 1px solid var(--vscode-dropdown-border);\n    border-bottom: 1px solid var(--vscode-dropdown-border);\n    border-top: 1px solid var(--vscode-dropdown-border);\n    border-right: 0 solid var(--vscode-dropdown-border);\n    &:focus {\n      outline: none;\n      border-left: 1px solid var(--vscode-focusBorder);\n      border-bottom: 1px solid var(--vscode-focusBorder);\n      border-top: 1px solid var(--vscode-focusBorder);\n      border-right: 0 solid var(--vscode-focusBorder);\n    }\n`);\nexport const AutoComplete = (props) => {\n    const { id, selectedItem, items, notItemsFoundMessage, widthOffset = 108, onChange } = props;\n    const [query, setQuery] = useState('');\n    const [isTextFieldFocused, setIsTextFieldFocused] = useState(false);\n    const [isUpButton, setIsUpButton] = useState(false);\n    const inputRef = useRef(null);\n    const handleChange = (item) => {\n        onChange(item);\n    };\n    const handleTextFieldFocused = () => {\n        setIsTextFieldFocused(true);\n    };\n    const handleTextFieldClick = () => {\n        var _a, _b, _c;\n        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.select();\n        // This is to open the dropdown when the text field is focused.\n        // This is a hacky way to do it since the Combobox component does not have a prop to open the dropdown.\n        (_b = document.getElementById(`autocomplete-dropdown-button-${items[0]}`)) === null || _b === void 0 ? void 0 : _b.click();\n        (_c = document.getElementById(selectedItem)) === null || _c === void 0 ? void 0 : _c.focus();\n    };\n    const handleTextFieldOutFocused = () => {\n        setIsTextFieldFocused(false);\n        setIsUpButton(false);\n    };\n    const handleComboButtonClick = () => {\n        setIsUpButton(!isUpButton);\n    };\n    const handleQueryChange = (q) => {\n        setQuery(q);\n    };\n    const handleInputQueryChange = (event) => {\n        setQuery(event.target.value);\n    };\n    const displayItemValue = (item) => item;\n    const filteredResults = query === ''\n        ? items\n        : items.filter(item => item.toLowerCase().replace(/\\s+/g, '').includes(query.toLowerCase().replace(/\\s+/g, '')));\n    return (React.createElement(\"div\", null,\n        React.createElement(Combobox, { value: selectedItem, onChange: handleChange },\n            React.createElement(\"div\", null,\n                React.createElement(\"div\", null,\n                    React.createElement(Combobox.Input, { id: id, ref: inputRef, displayValue: displayItemValue, onChange: handleInputQueryChange, className: SearchableInput, onBlur: handleTextFieldOutFocused, onFocus: handleTextFieldFocused, onClick: handleTextFieldClick }),\n                    React.createElement(Combobox.Button, { id: `autocomplete-dropdown-button-${items[0]}`, className: isTextFieldFocused ? ComboboxButtonContainerActive : ComboboxButtonContainer, onClick: handleComboButtonClick }, isUpButton ? (React.createElement(\"i\", { className: `codicon codicon-chevron-up ${DropdownIcon}`, onClick: handleComboButtonClick })) : (React.createElement(\"i\", { className: `codicon codicon-chevron-down ${DropdownIcon}`, onClick: handleComboButtonClick })))),\n                React.createElement(Dropdown, { query: query, notItemsFoundMessage: notItemsFoundMessage, widthOffset: widthOffset, filteredResults: filteredResults, onQueryChange: handleQueryChange })))));\n};\n","/**\n * Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 LLC. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein in any form is strictly forbidden, unless permitted by WSO2 expressly.\n * You may not alter or remove any copyright or other notice from copies of this content.\n */\nimport styled from '@emotion/styled';\nimport React from 'react';\nconst Container = styled.div `\n\t* {\n\t\tbox-sizing: border-box;\n\t}\n\tposition: absolute;\n\tleft: 0;\n\ttop: 0;\n\tz-index: 5;\n\theight: 2px;\n\twidth: 100%;\n\toverflow: hidden;\n\n\t.progress-bar {\n\t\tbackground-color: var(--vscode-progressBar-background);\n\t\tdisplay: none;\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\twidth: 2%;\n\t\theight: 2px;\n\t}\n\n\t&.active .progress-bar {\n\t\tdisplay: inherit;\n\t}\n\n\t&.discrete .progress-bar {\n\t\tleft: 0;\n\t\ttransition: width 0.1s linear;\n\t}\n\n\t&.discrete.done .progress-bar {\n\t\twidth: 100%;\n\t}\n\n\t&.infinite .progress-bar {\n\t\tanimation-name: progress;\n\t\tanimation-duration: 4s;\n\t\tanimation-iteration-count: infinite;\n\t\tanimation-timing-function: steps(100);\n\t\ttransform: translateZ(0);\n\t}\n\n\t@keyframes progress {\n\t\t0% {\n\t\t\ttransform: translateX(0) scaleX(1);\n\t\t}\n\n\t\t50% {\n\t\t\ttransform: translateX(2500%) scaleX(3);\n\t\t}\n\n\t\tto {\n\t\t\ttransform: translateX(4900%) scaleX(1);\n\t\t}\n\t}\n\n`;\nexport const ProgressIndicator = ({ id }) => {\n    return (React.createElement(Container, { className: \"infinite active\", role: \"progressbar\", id: id },\n        React.createElement(\"div\", { className: \"progress-bar\" })));\n};\n","/*\n *  Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com). All Rights Reserved.\n *\n *  This software is the property of WSO2 LLC. and its suppliers, if any.\n *  Dissemination of any information or reproduction of any material contained\n *  herein is strictly forbidden, unless permitted by WSO2 in accordance with\n *  the WSO2 Commercial License available at http://wso2.com/licenses.\n *  For specific language governing the permissions and limitations under\n *  this license, please see the license as well as any agreement youâ€™ve\n *  entered into with WSO2 governing the purchase of this software and any\n *  associated services.\n */\nimport React from \"react\";\nimport { StepCard, StepTitle, StepCircle, HorizontalBar, BottomTitleWrapper, BottomTitleHorizontalBar, IconTitleWrapper } from \"./Stepper\";\nimport styled from \"@emotion/styled\";\nimport { colors } from \"../Commons/Colors\";\nconst RightSign = styled.div `\n    position: relative;\n    top: 15%;\n    left: 35%;\n    width: 5px;\n    height: 12px;\n    border: 2px solid white;\n    border-bottom: none;\n    border-right: none;\n    transform: rotate(225deg);\n`;\nexport const CompletedStepCard = (props) => (React.createElement(StepCard, null, props.titleAlignment === \"right\" ? (React.createElement(React.Fragment, null,\n    React.createElement(StepCircle, { color: colors.textLinkForeground },\n        React.createElement(RightSign, null)),\n    React.createElement(StepTitle, { color: colors.editorForeground }, props.step.title),\n    props.totalSteps === props.step.id + 1 ? null : React.createElement(HorizontalBar, null))) :\n    React.createElement(React.Fragment, null,\n        React.createElement(IconTitleWrapper, null,\n            React.createElement(StepCircle, { color: colors.textLinkForeground },\n                React.createElement(RightSign, null)),\n            props.totalSteps === props.step.id + 1 ? null : React.createElement(BottomTitleHorizontalBar, null),\n            React.createElement(BottomTitleWrapper, { color: colors.editorForeground }, props.step.title)))));\n","/*\n *  Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com). All Rights Reserved.\n *\n *  This software is the property of WSO2 LLC. and its suppliers, if any.\n *  Dissemination of any information or reproduction of any material contained\n *  herein is strictly forbidden, unless permitted by WSO2 in accordance with\n *  the WSO2 Commercial License available at http://wso2.com/licenses.\n *  For specific language governing the permissions and limitations under\n *  this license, please see the license as well as any agreement youâ€™ve\n *  entered into with WSO2 governing the purchase of this software and any\n *  associated services.\n */\nimport React from \"react\";\nimport { BottomTitleHorizontalBar, BottomTitleWrapper, HorizontalBar, IconTitleWrapper, StepCard, StepCircle, StepTitle } from \"./Stepper\";\nimport styled from \"@emotion/styled\";\nimport { colors } from \"../Commons/Colors\";\nconst StepNumber = styled.div `\n    display: flex;\n    justify-content: center;\n    margin-top: 4px;\n    margin-left: 8px;\n    color: var(--vscode-editor-background);\n`;\nexport const InCompletedStepCard = (props) => (React.createElement(StepCard, null, props.titleAlignment === \"right\" ? (React.createElement(React.Fragment, null,\n    React.createElement(StepCircle, { color: colors.indentGuideActiveBackgound },\n        React.createElement(StepNumber, null, props.step.id + 1)),\n    React.createElement(StepTitle, { color: colors.indentGuideActiveBackgound }, props.step.title),\n    (props.totalSteps === props.step.id + 1) ? null : React.createElement(HorizontalBar, null))) :\n    React.createElement(React.Fragment, null,\n        React.createElement(IconTitleWrapper, null,\n            React.createElement(StepCircle, { color: colors.indentGuideActiveBackgound },\n                React.createElement(StepNumber, null, props.step.id + 1)),\n            props.totalSteps === props.step.id + 1 ? null : React.createElement(BottomTitleHorizontalBar, null),\n            React.createElement(BottomTitleWrapper, { color: colors.indentGuideActiveBackgound }, props.step.title)))));\n","/*\n *  Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com). All Rights Reserved.\n *\n *  This software is the property of WSO2 LLC. and its suppliers, if any.\n *  Dissemination of any information or reproduction of any material contained\n *  herein is strictly forbidden, unless permitted by WSO2 in accordance with\n *  the WSO2 Commercial License available at http://wso2.com/licenses.\n *  For specific language governing the permissions and limitations under\n *  this license, please see the license as well as any agreement youâ€™ve\n *  entered into with WSO2 governing the purchase of this software and any\n *  associated services.\n */\nimport React from 'react';\nimport styled from \"@emotion/styled\";\nimport { CompletedStepCard } from './CompletedStepCard';\nimport { InCompletedStepCard } from './IncompleteStepCard';\nexport const StepperContainer = styled.div `\n    display: flex;\n    flex-direction: row;\n    flex-grow: initial;\n    justify-content: ${(props) => props.allignment};\n`;\nexport const StepCard = styled.div `\n    display: flex;\n    flex-direction: row;\n`;\nexport const StepTitle = styled.div `\n    font-size: 14px;\n    padding-top: 12px;\n    padding-left: 5px;\n    color: ${(props) => props.color};\n    font-weight: 600;\n`;\nexport const BottomTitleWrapper = styled.div `\n    display: flex;\n    font-size: 14px;\n    font-weight: 600;\n    flex-direction: column;\n    color: ${(props) => props.color};\n    align-items: center;\n    text-align: center;\n    margin-top: 15px;\n`;\nexport const BottomStepTitle = styled.div `\n    font-size: 14px;\n    padding-top: 12px;\n    padding-left: 5px;\n    padding-right: 5px;\n    color: ${(props) => props.color};\n    font-weight: 600;\n`;\nexport const StepStatus = styled.div `\n    color: ${(props) => props.color};\n    padding-top: 5px;\n    font-size: 9px;\n`;\nexport const StepCircle = styled.div `\n    display: flex;\n    align-self: center;\n    background-color: ${(props) => props.color};\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    position: relative;\n    left: 12px;\n    top: 18px;\n    transform: translate(-50%, -50%);\n`;\nexport const HorizontalBar = styled.div `\n    width: 120px;\n    background-color: var(--vscode-editorIndentGuide-activeBackground);\n    height: 1px;\n    position: relative;\n    top: 20px;\n    margin-left: 5px;\n    margin-right: 5px;\n`;\nexport const IconTitleWrapper = styled.div `\n    display: flex;\n    width: 150px;\n    flex-direction: column;\n    justify-content: flex-start;\n`;\nexport const BottomTitleHorizontalBar = styled.div `\n    width: 120px;\n    background-color: var(--vscode-editorIndentGuide-activeBackground);\n    height: 1px;\n    position: relative;\n    top: -5px;\n    left: 85px;\n    margin-left: 5px;\n    margin-right: 5px;\n`;\nexport const Stepper = (props) => {\n    const { steps, currentStep, alignment: alignment = \"center\", variant: titleAlignment = \"right\" } = props;\n    return (React.createElement(StepperContainer, { allignment: alignment }, steps.map((step, id) => {\n        const stepCardProps = {\n            currentStep: currentStep,\n            step: {\n                id: id,\n                title: step\n            },\n            totalSteps: steps.length,\n            titleAlignment: titleAlignment\n        };\n        if (id < currentStep) {\n            return React.createElement(CompletedStepCard, Object.assign({ key: `step${id}` }, stepCardProps));\n        }\n        return React.createElement(InCompletedStepCard, Object.assign({ key: `step${id}` }, stepCardProps));\n    })));\n};\n","/**\n * Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 LLC. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein in any form is strictly forbidden, unless permitted by WSO2 expressly.\n * You may not alter or remove any copyright or other notice from copies of this content.\n */\nimport { css, cx } from \"@emotion/css\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\nconst Container = styled.div `\n    align-items: center;\n    display: flex;\n    flex-direction: row;\n    background-color: var(--vscode-toolbar-activeBackground);\n    padding: 6px;\n`;\nconst codiconStyles = css `\n    color: var(--vscode-errorForeground);\n    margin-right: 6px;\n    vertical-align: middle;\n`;\nexport const ErrorIcon = cx(css `\n    color: var(--vscode-errorForeground);\n`);\nexport function ErrorBanner(props) {\n    const { errorMsg } = props;\n    return (React.createElement(Container, null,\n        React.createElement(\"i\", { className: `codicon codicon-warning ${cx(codiconStyles)}` }),\n        errorMsg));\n}\n","/**\n * Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 LLC. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein in any form is strictly forbidden, unless permitted by WSO2 expressly.\n * You may not alter or remove any copyright or other notice from copies of this content.\n */\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\nconst RequiredElement = styled.span `\n    color: var(--vscode-errorForeground);\n    font-size: 14px;\n`;\nexport function RequiredFormInput() {\n    return React.createElement(RequiredElement, null, \"*\");\n}\n","/**\n * Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 LLC. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein in any form is strictly forbidden, unless permitted by WSO2 expressly.\n * You may not alter or remove any copyright or other notice from copies of this content.\n */\nimport React from \"react\";\nimport * as Icons from \"../../assets/icons\";\nimport styled from \"@emotion/styled\";\nconst IconContainer = styled.div `\n    height: 16px;\n    width: 14px;\n    cursor: pointer;\n    ${(props) => props.sx};\n`;\nexport const Icon = (props) => {\n    const { name, sx, onClick } = props;\n    const handleComponentClick = () => {\n        onClick();\n    };\n    const SpecificIcon = Icons[name];\n    return (React.createElement(IconContainer, { sx: sx, onClick: handleComponentClick }, SpecificIcon && React.createElement(SpecificIcon, null)));\n};\n","/**\n * Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 LLC. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein in any form is strictly forbidden, unless permitted by WSO2 expressly.\n * You may not alter or remove any copyright or other notice from copies of this content.\n */\nimport React from \"react\";\nimport cn from \"classnames\";\nimport styled from \"@emotion/styled\";\nconst CardContainer = styled.div `\n    // Flex Props\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    // End Flex Props\n    // Sizing Props\n    width: 120px;\n    padding: 5px;\n    // End Sizing Props\n    // Border Props\n    border-radius: 3px;\n    border-style: solid;\n    border-width: 1px;\n    border-color: var(--vscode-panel-border);\n    cursor: pointer;\n    &:hover, &.active {\n        border-color: var(--vscode-focusBorder);\n    };\n\t&.not-allowed {\n    \tcursor: not-allowed;\n  \t};\n\t${(props) => props.sx};\n`;\nexport const ComponentCard = (props) => {\n    const { id, sx, tooltip, isSelected, disabled, children, onClick } = props;\n    const handleComponentClick = () => {\n        onClick(id);\n    };\n    return (React.createElement(CardContainer, { id: `card-select-${id}`, className: cn({ \"active\": isSelected, 'not-allowed': disabled }), sx: sx, onClick: handleComponentClick, title: tooltip }, children));\n};\n","/**\n * Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 LLC. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein in any form is strictly forbidden, unless permitted by WSO2 expressly.\n * You may not alter or remove any copyright or other notice from copies of this content.\n */\nimport styled from \"@emotion/styled\";\nimport { VSCodeDataGridCell } from \"@vscode/webview-ui-toolkit/react\";\nexport const TruncatedGridTitleCell = styled(VSCodeDataGridCell) `\n    padding-left: 0px;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    opacity: 0.7;\n    color: var(--foreground); // Override the default color to match the theme\n`;\nexport const TruncatedGridCell = styled(VSCodeDataGridCell) `\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    color: var(--foreground); // Override the default color to match the theme\n`;\n"],"names":[],"sourceRoot":""}