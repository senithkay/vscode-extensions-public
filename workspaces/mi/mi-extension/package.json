{
  "name": "micro-integrator",
  "displayName": "Micro Integrator",
  "description": "An extension which gives a development environment for designing, developing, debugging, and testing integration solutions.",
  "version": "0.9.0",
  "publisher": "wso2",
  "engines": {
    "vscode": "^1.81.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onLanguage:SynapseXml",
    "workspaceContains:.project",
    "workspaceContains:pom.xml",
    "onDebugResolve:mock",
    "onDebugDynamicConfigurations:mock"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "SynapseXml",
        "extensions": [
          ".xml"
        ]
      }
    ],
    "grammars": [
      {
        "language": "SynapseXml",
        "scopeName": "synapse.xml",
        "path": "./syntaxes/xml.tmLanguage.json"
      }
    ],
    "debuggers": [
      {
        "type": "mock",
        "label": "Mock Debug",
        "runtime": "node",

        "configurationAttributes": {
          "launch": {
            "required": []
          }
        },
        "initialConfigurations": [
            {
                "type": "mock",
                "name": "Mock Debug",
                "request": "launch",
                "preLaunchTask": "build-project"
            }     
        ]
      }
    ],
    "configuration": [
      {
        "type": "object",
        "title": "Integration Studio",
        "properties": {
          "integrationStudio.apiKey": {
            "type": "string",
            "default": "",
            "description": "OpenAI API Key"
          }
        }
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "micro-integrator",
          "title": "Micro Integrator",
          "icon": "assets/icon.svg"
        }
      ]
    },
    "views": {
      "micro-integrator": [
        {
          "id": "MI.project-explorer",
          "name": "Project Explorer"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "MI.project-explorer",
        "contents": "Welcome to Micro Integrator. You can open a folder containing a MI project or create a new project.\n[Open MI Project](command:MI.openProject)\n[Create New Project](command:MI.openWelcome)\nTo learn more about how to use Micro Integrator in VS Code [read our docs](https://ei.docs.wso2.com)."
      }
    ],
    "commands": [
      {
        "command": "MI.openProject",
        "title": "Open Project",
        "category": "MI"
      },
      {
        "command": "MI.project-explorer.add",
        "title": "Add Construct",
        "icon": "$(add)",
        "category": "MI"
      },
      {
        "command": "MI.project-explorer.refresh",
        "title": "Refresh Project Explorer",
        "icon": "$(refresh)",
        "group": "navigation"
      },
      {
        "command": "MI.project-explorer.add-api",
        "title": "Add API",
        "icon": "$(add)",
        "group": "navigation",
        "category": "MI"
      },
      {
        "command": "MI.project-explorer.create-project",
        "title": "Create New Project",
        "icon": "$(add)",
        "group": "navigation",
        "category": "MI"
      },
      {
        "command": "MI.project-explorer.open-project-overview",
        "title": "Open Project Overview",
        "icon": "$(list-unordered)",
        "when": "false"
      },
      {
        "command": "MI.project-explorer.open-service-designer",
        "title": "Open Service Designer",
        "icon": "$(design-view)",
        "when": "false"
      },
      {
        "command": "MI.project-explorer.open-service-designer-beside",
        "title": "Open Service Designer",
        "icon": "$(design-view)"
      },
      {
        "command": "MI.project-explorer.add-endpoint",
        "title": "Add Endpoint",
        "icon": "$(add)",
        "group": "navigation",
        "category": "MI"
      },
      {
        "command": "MI.project-explorer.add-sequence",
        "title": "Add Sequence",
        "icon": "$(add)",
        "group": "navigation",
        "category": "MI"
      },
      {
        "command": "MI.project-explorer.add-inbound-endpoint",
        "title": "Add Inbound Endpoint",
        "icon": "$(add)",
        "group": "navigation",
        "category": "MI"
      },
      {
        "command": "MI.project-explorer.add-local-entry",
        "title": "Add Local Entry",
        "icon": "$(add)",
        "group": "navigation",
        "category": "MI"
      },
      {
        "command": "MI.project-explorer.view",
        "title": "View"
      },
      {
        "command": "MI.show.source",
        "title": "Show Source",
        "icon": "$(distro-source-view)",
        "category": "MI"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "MI.project-explorer.open-service-designer",
          "when": "false"
        },
        {
          "command": "MI.project-explorer.open-service-designer-beside",
          "when": "false"
        }
      ],
      "view/title": [
        {
          "command": "MI.project-explorer.refresh",
          "when": "view == MI.project-explorer && projectOpened",
          "group": "navigation"
        },
        {
          "command": "MI.project-explorer.add",
          "when": "view == MI.project-explorer && projectOpened",
          "group": "navigation"
        }
      ],
      "editor/title": [
        {
          "command": "MI.project-explorer.open-service-designer-beside",
          "when": "editorLangId == SynapseXml",
          "group": "navigation@3"
        },
        {
          "when": "showGoToSource && editorLangId !== SynapseXml",
          "command": "MI.show.source",
          "group": "navigation@3"
        }
      ],
      "view/item/context": [
        {
          "command": "MI.project-explorer.open-project-overview",
          "when": "viewItem == project",
          "group": "inline" 
        },
        {
          "command": "MI.project-explorer.add-api",
          "when": "view == MI.project-explorer && viewItem == apis",
          "group": "inline"
        },
        {
          "command": "MI.project-explorer.open-service-designer",
          "when": "viewItem == api",
          "group": "inline"
        },
        {
          "command": "MI.project-explorer.add-endpoint",
          "when": "view == MI.project-explorer && viewItem == endpoints",
          "group": "inline"
        },
        {
          "command": "MI.project-explorer.add-sequence",
          "when": "view == MI.project-explorer && viewItem == sequences",
          "group": "inline"
        },
        {
          "command": "MI.project-explorer.add-inbound-endpoint",
          "when": "view == MI.project-explorer && viewItem == inboundEndpoints",
          "group": "inline"
        },
        {
          "command": "MI.project-explorer.add-local-entry",
          "when": "view == MI.project-explorer && viewItem == localEntries",
          "group": "inline"
        }
      ]
    },
    "icons": {
      "design-view": {
        "description": "design-view",
        "default": {
          "fontPath": "./resources/font-wso2-vscode/dist/wso2-vscode.woff",
          "fontCharacter": "\\f10e"
        }
      }
    }
  },
  "scripts": {
    "clean": "rimraf ./dist",
    "compile": "tsc -p .",
    "watch": "tsc -p . -w",
    "package": "if [ $isPreRelease = true ]; then vsce package --no-dependencies --pre-release; else vsce package --no-dependencies; fi",
    "build": "pnpm clean && pnpm run copyLSLibs && pnpm run copyFonts && webpack --mode production --devtool hidden-source-map && pnpm run package && pnpm run postbuild",
    "compile-tests": "pnpm run compile",
    "watch-tests": "pnpm run watch",
    "pretest": "pnpm run compile-tests && pnpm run compile && pnpm run lint",
    "lint": "eslint src --ext ts",
    "test": "pnpm run pretest && node ./out/test/runTest.js",
    "e2e-test-setup": "npx extest get-vscode -c 1.81.1 && npx extest get-chromedriver -c 1.81.1 && npx extest install-vsix -f $(ls vsix/*.vsix)",
    "e2e-test": "pnpm run compile-tests && pnpm exec playwright test",
    "copyFonts": "copyfiles -f ./node_modules/@wso2-enterprise/font-wso2-vscode/dist/* ./resources/font-wso2-vscode/dist/",
    "copyLSLibs": "copyfiles -f language-server/org.eclipse.lemminx/target/*.jar ls",
    "copyVSIX": "copyfiles *.vsix ./vsix",
    "copyVSIXToRoot": "copyfiles -f ./vsix/* ../../..",
    "postbuild": "pnpm run copyVSIX"
  },
  "devDependencies": {
    "@types/vscode": "^1.81.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@typescript-eslint/eslint-plugin": "^6.4.1",
    "@typescript-eslint/parser": "^6.4.1",
    "eslint": "^8.47.0",
    "glob": "^10.3.3",
    "mocha": "^10.2.0",
    "typescript": "^5.1.6",
    "ts-loader": "^9.4.4",
    "webpack": "^5.88.2",
    "webpack-cli": "^5.1.4",
    "@vscode/test-electron": "^2.3.4",
    "rimraf": "~5.0.5",
    "@wso2-enterprise/mi-visualizer": "workspace:*",
    "@wso2-enterprise/mi-rpc-client": "workspace:*"
  },
  "dependencies": {
    "copyfiles": "^2.4.1",
    "@vscode/vsce": "~2.21.0",
    "vscode-messenger": "^0.4.5",
    "vscode-messenger-common": "^0.4.5",
    "@wso2-enterprise/mi-core": "workspace:*",
    "@wso2-enterprise/mi-rpc-client": "workspace:*",
    "@playwright/test": "~1.37.1",
    "@wso2-enterprise/playwright-vscode-tester": "workspace:*",
    "vscode-extension-tester": "~5.9.1",
    "vscode-languageclient": "^8.0.2",
    "xml2js": "~0.6.2",
    "@types/xml2js": "~0.4.12",
    "jsonix": "~3.0.0",
    "lodash": "~4.17.21",
    "axios": "~1.5.1",
    "@types/lodash": "~4.14.199",
    "vscode-languageserver-protocol": "^3.17.2",
    "fast-xml-parser": "~4.3.2",
    "@wso2-enterprise/mi-syntax-tree": "workspace:*",
    "@wso2-enterprise/font-wso2-vscode": "workspace:*",
    "xstate": "^4.38.3",
    "node-fetch": "~2.6.2",
    "mustache": "~4.2.0",
    "@types/mustache": "~4.2.5",
    "vscode-debugadapter": "^1.51.0",
    "vscode-debugprotocol": "^1.51.0",
    "tree-kill": "^1.2.2"
  }
}